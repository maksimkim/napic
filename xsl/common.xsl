<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet 
	version="2.0" 
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:fo="http://www.w3.org/1999/XSL/Format" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:fn="http://www.w3.org/2005/xpath-functions"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>
	
	<xsl:template name="pascalize">
		<xsl:param name="input" />
		<xsl:variable name="head" select="fn:tokenize($input, '/')[1]" />
		<xsl:for-each select="fn:tokenize($head, '-')">
			<xsl:value-of select="fn:upper-case(fn:substring((.), 1, 1))" />
			<xsl:variable name="tail" select="fn:substring((.), 2, fn:string-length((.)) - 1)" />
			<xsl:choose>
				<xsl:when test="fn:upper-case($input) = $input">
					<xsl:value-of select="fn:lower-case($tail)" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$tail" />
				</xsl:otherwise>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="camel">
		<xsl:param name="input" />
		<xsl:for-each select="fn:tokenize($input, '-')">
			<xsl:choose>
				<xsl:when test="fn:position() = 1">
					<xsl:value-of select="fn:lower-case(fn:substring((.), 1, 1))" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="fn:upper-case(fn:substring((.), 1, 1))" />
				</xsl:otherwise>
			</xsl:choose>
			<xsl:variable name="tail" select="fn:substring((.), 2, fn:string-length((.)) - 1)" />
			<xsl:choose>
				<xsl:when test="fn:upper-case($input) = $input">
					<xsl:value-of select="fn:lower-case($tail)" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$tail" />
				</xsl:otherwise>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	
	<xsl:template name="codegen-warn">
		<xsl:variable name="n"><xsl:text>&#13;&#10;</xsl:text></xsl:variable>		
		<xsl:value-of select="concat('// --------------------------------------------------------------------------', $n)" />
		<xsl:value-of select="concat('//  This file is automatically generated from WADL specification. ', $n)" />
		<xsl:value-of select="concat('//  Manual changes can be lost.', $n)" />
		<xsl:value-of select="concat('// --------------------------------------------------------------------------', $n, $n)" />		
	</xsl:template>
	
</xsl:stylesheet>

